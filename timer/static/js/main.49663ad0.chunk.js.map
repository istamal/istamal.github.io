{"version":3,"sources":["components/Timer/Timer.jsx","components/Countdown/IntegerStep.jsx","components/Countdown/DecimalStep.jsx","components/Countdown/Countdown.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Timer","props","stopTimer","clearInterval","milisecondsCounter","isCliked","state","setState","startTimer","setInterval","time","minutes","seconds","miliseconds","clearProgress","stop","this","value","zero","num","classList","cn","className","onClick","React","Component","InputNumber","propTypes","PropTypes","number","isRequired","IntegerStep","onSliderChange","updateMinutes","parseInt","inputValue","onChange","event","target","Number","disabled","min","max","type","required","DecimalStep","updateSeconds","step","isClicked","bool","func","Countdown","resetTimer","secondsTimer","startTime","handleStopCountdown","handleCountdown","Math","round","audio","document","getElementById","load","playAudio","wrapper","createRef","play","then","file","console","log","catch","err","info","secondsToPercent","difference","toFixed","percent","red","start","ref","strokeColor","id","preload","src","TabPane","Tabs","App","defaultActiveKey","tab","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.49663ad0.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport cn from 'classnames';\r\n\r\nexport class Timer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttime: {\r\n\t\t\t\tminutes: 0,\r\n\t\t\t\tseconds: 0,\r\n\t\t\t\tmiliseconds: 0,\r\n\t\t\t},\r\n\t\t\tisCliked: false,\r\n\t\t\tstop: false,\r\n\t\t}\r\n\t}\r\n\r\n\tstopTimer = () => {\r\n\t\tclearInterval(this.milisecondsCounter);\r\n\t\tconst { isCliked } = this.state;\r\n\t\tthis.setState({ isCliked: !isCliked });\r\n\t}\r\n\r\n\tstartTimer = () => {\r\n\t\tconst { isCliked } = this.state;\r\n\t\tthis.setState({ isCliked: !isCliked });\r\n\r\n\t\tconst increment = () => {\r\n\t\t\tconst { minutes, seconds, miliseconds } = this.state.time;\r\n\t\t\tif (miliseconds === 60) {\r\n\t\t\t\tthis.setState({ time: { minutes, seconds: seconds + 1, miliseconds: 0 } });\r\n\t\t\t} else if (seconds === 60) {\r\n\t\t\t\tthis.setState({ time: { minutes: minutes + 1, seconds: 0, miliseconds } });\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ time: { minutes, seconds, miliseconds: miliseconds + 1 } });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.milisecondsCounter = setInterval(increment, 15);\r\n\t}\r\n\r\n\tclearProgress = () => {\r\n\t\tconst { isCliked } = this.state;\r\n\t\tif (isCliked) {\r\n\t\t\tclearInterval(this.milisecondsCounter);\r\n\t\t\tthis.setState({ isCliked: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ time: { minutes: 0, seconds: 0, miliseconds: 0 } });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { isCliked } = this.state;\r\n\t\tconst value = isCliked ? 'Пауза' : 'Запустить';\r\n\t\tconst { minutes, seconds, miliseconds } = this.state.time;\r\n\t\tconst zero = (num) => num < 10 ? 0 : '';\r\n\t\tconst classList = cn({\r\n\t\t\t'red': isCliked,\r\n\t\t\t'start': true,\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className=\"timer\">\r\n\t\t\t\t\t{`${zero(minutes)}${minutes} : ${zero(seconds)}${seconds} : ${zero(miliseconds)}${miliseconds}`}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={classList}\r\n\t\t\t\t\tonClick={ isCliked ? this.stopTimer : this.startTimer }\r\n\t\t\t\t>\r\n\t\t\t\t\t{ value }\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"reset\"\r\n\t\t\t\t\tonClick={this.clearProgress}\r\n\t\t\t\t>\r\n\t\t\t\t\tСбросить\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};","/* eslint-disable linebreak-style */\r\n/* eslint-disable radix */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Slider, InputNumber } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nInputNumber.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default class IntegerStep extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputValue: 0,\r\n    };\r\n  }\r\n\r\n  onSliderChange = (value) => {\r\n    const { updateMinutes } = this.props;\r\n    updateMinutes(parseInt(value));\r\n    this.setState({\r\n      inputValue: value,\r\n    });\r\n  }\r\n\r\n  onChange = (event) => {\r\n    const { value } = event.target;\r\n    const { updateMinutes } = this.props;\r\n    if (parseInt(value) > 720) {\r\n      this.setState({\r\n        inputValue: 720,\r\n      });\r\n    } else {\r\n      updateMinutes(Number(value));\r\n      this.setState({\r\n        inputValue: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n    const { isCliked } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Slider\r\n          disabled={isCliked}\r\n          min={0}\r\n          max={720}\r\n          onChange={this.onSliderChange}\r\n          value={inputValue}\r\n        />\r\n        <input\r\n          className=\"custom-input\"\r\n          disabled={isCliked}\r\n          min={0}\r\n          max={720}\r\n          type=\"number\"\r\n          required\r\n          value={inputValue}\r\n          onChange={this.onChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable radix */\r\n/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Slider, InputNumber } from 'antd';\r\nimport PropTypes from 'prop-types';\r\n\r\nInputNumber.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default class DecimalStep extends React.Component {\r\n  state = {\r\n    inputValue: 0,\r\n  };\r\n\r\n  onSliderChange = (value) => {\r\n    const { updateSeconds } = this.props;\r\n    updateSeconds(parseInt(value));\r\n    this.setState({\r\n      inputValue: value,\r\n    });\r\n  };\r\n\r\n  onChange = (event) => {\r\n    const { updateSeconds } = this.props;\r\n    const { value } = event.target;\r\n    if (parseInt(value) > 60) {\r\n      this.setState({\r\n        inputValue: 60,\r\n      });\r\n    } else {\r\n      updateSeconds(Number(value));\r\n      this.setState({\r\n        inputValue: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n    const { isCliked } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Slider\r\n          disabled={isCliked}\r\n          min={0}\r\n          max={60}\r\n          step={15}\r\n          onChange={this.onSliderChange}\r\n          value={inputValue}\r\n        />\r\n        <input\r\n          className=\"custom-input\"\r\n          disabled={isCliked}\r\n          min={0}\r\n          max={60}\r\n          step={15}\r\n          type=\"number\"\r\n          value={inputValue}\r\n          onChange={this.onChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-console */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable indent */\r\n/* eslint-disable no-tabs */\r\nimport React from 'react';\r\nimport { Progress } from 'antd';\r\nimport cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport IntegerStep from './IntegerStep';\r\nimport DecimalStep from './DecimalStep';\r\n\r\nIntegerStep.propTypes = {\r\n  isClicked: PropTypes.bool,\r\n  updateMinutes: PropTypes.func,\r\n};\r\n\r\nDecimalStep.propTypes = {\r\n\tisClicked: PropTypes.bool,\r\n\tupdateMinutes: PropTypes.func,\r\n};\r\n\r\nexport default class Countdown extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.wrapper = React.createRef();\r\n\t\tthis.state = {\r\n\t\t\tminutes: 0,\r\n\t\t\tseconds: 0,\r\n\t\t\tisCliked: false,\r\n\t\t\tstartTime: 0,\r\n\t\t};\r\n\t}\r\n\r\n\tupdateMinutes = (value) => {\r\n\t\tthis.setState({ minutes: value });\r\n\t}\r\n\r\n\tupdateSeconds = (value) => {\r\n\t\tthis.setState({ seconds: value });\r\n\t}\r\n\r\n\tresetTimer = () => {\r\n\t\tconst { isCliked } = this.state;\r\n\t\tif (isCliked) {\r\n\t\t\tclearInterval(this.secondsTimer);\r\n\t\t\tthis.setState({ isCliked: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ minutes: 0, seconds: 0, startTime: 0 });\r\n\t\t}\r\n\t}\r\n\r\n\thandleStopCountdown = () => {\r\n\t\tthis.setState({ isCliked: false });\r\n\t\tclearInterval(this.secondsTimer);\r\n\t}\r\n\r\n\thandleCountdown = () => {\r\n\t\tconst { minutes, seconds } = this.state;\r\n\t\tthis.setState({\r\n\t\t\tisCliked: true,\r\n\t\t\tstartTime: Number(`${minutes}.${seconds > 0 ? Math.round((seconds / 3) * 5) : 0}`),\r\n\t\t});\r\n\r\n\t\tconst decrementSeconds = () => {\r\n\t\t\tconst { seconds, minutes } = this.state;\r\n\t\t\tthis.setState({ seconds: seconds - 1 });\r\n\t\t\tif (seconds === 0) {\r\n\t\t\t\tif (minutes === 0) {\r\n\t\t\t\t\tthis.audio = document.getElementById('audio');\r\n\t\t\t\t\tthis.audio.load();\r\n\t\t\t\t\tthis.playAudio();\r\n\t\t\t\t\tthis.setState({ seconds, isCliked: false, startTime: 0 });\r\n\t\t\t\t\treturn clearInterval(this.secondsTimer);\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ minutes: minutes - 1, seconds: 59 });\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.secondsTimer = setInterval(decrementSeconds, 1000);\r\n\t}\r\n\r\n\tplayAudio() {\r\n\t\tthis.audio.play()\r\n\t\t\t.then((file) => {\r\n\t\t\t\tconsole.log(file);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.info(err));\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tstartTime,\r\n\t\t\tminutes,\r\n\t\t\tseconds,\r\n\t\t\tisCliked,\r\n\t\t} = this.state;\r\n\t\tconst value = isCliked ? 'Остановить' : 'Запустить';\r\n\t\tconst zero = (num) => (num < 10 ? 0 : '');\r\n\t\t// Time percent calculation\r\n\t\tconst secondsToPercent = seconds > 0 ? (seconds / 3) * 5 : 0;\r\n\t\tconst remainingMinute = Number(`${minutes}.${zero(secondsToPercent)}${secondsToPercent.toFixed()}`);\r\n\t\tconst difference = (startTime - (startTime - remainingMinute));\r\n\t\tconst percent = Math.round(100 - (difference / startTime) * 100);\r\n\r\n\t\tconst classList = cn({\r\n\t\t\tred: isCliked,\r\n\t\t\tstart: true,\r\n\t\t});\r\n\r\n\t\treturn (\r\n  <div ref={this.wrapper}>\r\n    <IntegerStep isCliked={isCliked} updateMinutes={this.updateMinutes} />\r\n    <DecimalStep isCliked={isCliked} updateSeconds={this.updateSeconds} />\r\n    <h1 className=\"timer\">{`${zero(minutes)}${minutes} : ${zero(seconds)}${seconds}`}</h1>\r\n    <div className=\"progress\">\r\n      <Progress\r\n        type=\"circle\"\r\n        strokeColor={{\r\n\t\t\t\t\t'0%': '#108ee9',\r\n\t\t\t\t\t'100%': '#87d068',\r\n\t\t\t\t}}\r\n        percent={percent}\r\n      />\r\n    </div>\r\n    <button type=\"button\" className={classList} onClick={isCliked ? this.handleStopCountdown : this.handleCountdown}>\r\n      {value}\r\n    </button>\r\n    <button type=\"button\" className=\"reset\" onClick={this.resetTimer}>\r\n      Сбросить\r\n    </button>\r\n    {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\r\n    <audio id=\"audio\" preload=\"auto\" src=\"timer.mp3\" />\r\n  </div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport 'antd/dist/antd.css';\r\nimport { Tabs } from 'antd';\r\nimport { Timer } from './components/Timer/Timer';\r\nimport Countdown from './components/Countdown/Countdown';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nfunction App() {\r\n  return (\r\n    <Tabs defaultActiveKey=\"1\">\r\n      <TabPane tab=\"Таймер\" key=\"1\">\r\n        <Timer />\r\n      </TabPane>\r\n      <TabPane tab=\"Обратный отчет\" key=\"2\">\r\n        <Countdown />\r\n      </TabPane>\r\n    </Tabs>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}