{"version":3,"sources":["components/Timer/Timer.jsx","components/Countdown/InitialTime.jsx","components/Countdown/Countdown.jsx","App.js","serviceWorker.js","index.js"],"names":["Timer","props","stopTimer","clearInterval","milisecondsCounter","isCliked","state","setState","startTimer","setInterval","time","minutes","seconds","miliseconds","clearProgress","stop","this","value","zero","num","classList","cn","className","onClick","React","Component","IntegerStep","onChange","updateMinutes","inputValue","disabled","min","max","type","required","DecimalStep","updateSeconds","isNaN","step","Countdown","resetTimer","minutesTimer","secondsTimer","handleStopCountdown","handleCountdown","audio","document","getElementById","load","playAudio","play","then","file","console","log","catch","err","info","id","preload","src","TabPane","Tabs","App","defaultActiveKey","tab","key","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a88469c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport cn from 'classnames';\r\n\r\nexport class Timer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttime: {\r\n\t\t\t\tminutes: 0,\r\n\t\t\t\tseconds: 0,\r\n\t\t\t\tmiliseconds: 0,\r\n\t\t\t},\r\n\t\t\tisCliked: false,\r\n\t\t\tstop: false,\r\n\t\t}\r\n\t}\r\n\r\n\tstopTimer = () => {\r\n\t\tclearInterval(this.milisecondsCounter);\r\n\t\tconst { isCliked } = this.state;\r\n\t\tthis.setState({ isCliked: !isCliked });\r\n\t}\r\n\r\n\tstartTimer = () => {\r\n\t\tconst { isCliked } = this.state;\r\n\t\tthis.setState({ isCliked: !isCliked });\r\n\r\n\t\tconst increment = () => {\r\n\t\t\tconst { minutes, seconds, miliseconds } = this.state.time;\r\n\t\t\tif (miliseconds === 60) {\r\n\t\t\t\tthis.setState({ time: { minutes, seconds: seconds + 1, miliseconds: 0 } });\r\n\t\t\t} else if (seconds === 60) {\r\n\t\t\t\tthis.setState({ time: { minutes: minutes + 1, seconds: 0, miliseconds } });\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ time: { minutes, seconds, miliseconds: miliseconds + 1 } });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.milisecondsCounter = setInterval(increment, 15);\r\n\t}\r\n\r\n\tclearProgress = () => {\r\n\t\tconst { isCliked } = this.state;\r\n\t\tif (isCliked) {\r\n\t\t\tclearInterval(this.milisecondsCounter);\r\n\t\t\tthis.setState({ isCliked: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ time: { minutes: 0, seconds: 0, miliseconds: 0 } });\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { isCliked } = this.state;\r\n\t\tconst value = isCliked ? 'Пауза' : 'Запустить';\r\n\t\tconst { minutes, seconds, miliseconds } = this.state.time;\r\n\t\tconst zero = (num) => num < 10 ? 0 : '';\r\n\t\tconst classList = cn({\r\n\t\t\t'red': isCliked,\r\n\t\t\t'start': true,\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className=\"timer\">\r\n\t\t\t\t\t{`${zero(minutes)}${minutes} : ${zero(seconds)}${seconds} : ${zero(miliseconds)}${miliseconds}`}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={classList}\r\n\t\t\t\t\tonClick={ isCliked ? this.stopTimer : this.startTimer }\r\n\t\t\t\t>\r\n\t\t\t\t\t{ value }\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"reset\"\r\n\t\t\t\t\tonClick={this.clearProgress}\r\n\t\t\t\t>\r\n\t\t\t\t\tСбросить\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};","import React from 'react';\r\nimport { Slider, InputNumber } from 'antd';\r\n\r\nexport class IntegerStep extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      inputValue: 0,\r\n    };\r\n  }\r\n\r\n  onChange = value => {\r\n    this.props.updateMinutes(value);\r\n    this.setState({\r\n      inputValue: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n    const { isCliked } = this.props;\r\n\r\n    return (\r\n      <div>\r\n          <Slider\r\n            disabled={isCliked}\r\n            min={0}\r\n            max={60}\r\n            onChange={this.onChange}\r\n            value={typeof inputValue === 'number' ? inputValue : 0}\r\n          />\r\n          <InputNumber\r\n            disabled={isCliked}\r\n            min={0}\r\n            max={60}\r\n            type=\"number\"\r\n            required\r\n            value={inputValue}\r\n            onChange={this.onChange}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class DecimalStep extends React.Component {\r\n  state = {\r\n    inputValue: 0,\r\n  };\r\n\r\n  onChange = value => {\r\n    this.props.updateSeconds(value);\r\n    if (isNaN(value)) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      inputValue: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n    const { isCliked } = this.props;\r\n\r\n    return (\r\n      <div>\r\n          <Slider\r\n            disabled={isCliked}\r\n            min={0}\r\n\t\t\t\t\t\tmax={60}\r\n\t\t\t\t\t\tstep={15}\r\n            onChange={this.onChange}\r\n            value={typeof inputValue === 'number' ? inputValue : 0}\r\n          />\r\n          <InputNumber\r\n            disabled={isCliked}\r\n            min={0}\r\n\t\t\t\t\t\tmax={60}\r\n            step={15}\r\n            type=\"number\"\r\n            value={inputValue}\r\n            onChange={this.onChange}\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { IntegerStep, DecimalStep } from './InitialTime';\r\nimport cn from 'classnames';\r\n\r\nexport class Countdown extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tminutes: 0,\r\n\t\t\tseconds: 0,\r\n\t\t\tisCliked: false,\r\n\t\t}\r\n\t}\r\n\r\n\tupdateMinutes = (value) => {\r\n\t\tthis.setState({ minutes: value });\r\n\t}\r\n\r\n\tupdateSeconds = (value) => {\r\n\t\tthis.setState({ seconds: value });\r\n\t}\r\n\r\n\tresetTimer =  () => {\r\n\t\tconst { isCliked } = this.state;\r\n\t\tif (isCliked) {\r\n\t\t\tclearInterval(this.minutesTimer);\r\n\t\t\tclearInterval(this.secondsTimer);\r\n\t\t\tthis.setState({ isCliked: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ minutes: 0, seconds: 0 });\r\n\t\t}\r\n\t}\r\n\r\n\thandleStopCountdown = () => {\r\n\t\tthis.setState({isCliked: false});\r\n\t\tclearInterval(this.minutesTimer);\r\n\t\tclearInterval(this.secondsTimer);\r\n\t}\r\n\r\n\tplayAudio() {\r\n\t\tthis.audio.play()\r\n\t\t\t.then((file) => {\r\n\t\t\t\tconsole.log(file);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.info(err));\r\n\t}\r\n\r\n\thandleCountdown = () => {\r\n\t\tthis.setState({isCliked: true});\r\n\r\n\t\tconst decrementSeconds = () => {\r\n\t\t\tconst { seconds, minutes } = this.state;\r\n\t\t\tthis.setState({ seconds: seconds - 1});\r\n\t\t\tif (seconds === 0) {\r\n\t\t\t\tif (minutes === 0) {\r\n\t\t\t\t\tthis.setState({ seconds, isCliked: false });\r\n\t\t\t\t\tthis.audio = document.getElementById('audio');\r\n\t\t\t\t\tthis.audio.load();\r\n\t\t\t\t\tthis.playAudio();\r\n\t\t\t\t\treturn clearInterval(this.secondsTimer);\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ minutes: minutes - 1, seconds: 60 });\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.secondsTimer = setInterval(decrementSeconds , 1000);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { minutes, seconds, isCliked } = this.state;\r\n\t\tconst value = isCliked ? 'Остановить' : 'Запустить';\r\n\t\tconst zero = (num) => num < 10 ? 0 : '';\r\n\t\tconst classList = cn({\r\n\t\t\t'red': isCliked,\r\n\t\t\t'start': true,\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<IntegerStep isCliked={isCliked} updateMinutes={this.updateMinutes}/>\r\n\t\t\t\t<DecimalStep isCliked={isCliked} updateSeconds={this.updateSeconds}/>\r\n\t\t\t\t<h1 className=\"timer\">{`${zero(minutes)}${minutes} : ${zero(seconds)}${seconds}`}</h1>\r\n\t\t\t\t<button className={classList} onClick={isCliked ? this.handleStopCountdown : this.handleCountdown}>\r\n\t\t\t\t\t{value}\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"reset\" onClick={this.resetTimer}>\r\n\t\t\t\t\tСбросить\r\n\t\t\t\t</button>\r\n\t\t\t\t<audio id=\"audio\" preload=\"auto\" src=\"timer.mp3\"></audio>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\nimport './App.scss';\nimport { Tabs } from 'antd';\nimport { Timer } from './components/Timer/Timer';\nimport { Countdown } from './components/Countdown/Countdown';\n\nconst { TabPane }  = Tabs;\n\nfunction App() {\n  return (\n    <Tabs defaultActiveKey=\"1\" >\n        <TabPane tab=\"Таймер\" key=\"1\">\n          <Timer />\n        </TabPane>\n        <TabPane tab=\"Обратный отчет\" key=\"2\">\n          <Countdown />\n        </TabPane>\n    </Tabs>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}